parameters:
    jwt_secret_key: '%env(JWT_SECRET_KEY)%'

services:
    # Default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # Makes classes in src/ available to be used as services
    # This creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Service\JWTManager:
        arguments:
            $jwtManager: '@lexik_jwt_authentication.jwt_manager'
            $jwtEncoder: '@lexik_jwt_authentication.encoder'

    App\Service\PasswordFactory:
        arguments:
            $passwordHasher: '@security.password_hasher'
            
    
    App\Controller\UserCreateController:
        autowire: true
        autoconfigure: true
        public: true  # Permet d'être utilisé par API Platform

    App\EventListener\JWTMiddleware:
        arguments:
            $requestStack: '@request_stack'
            $jwtManager: '@App\Service\JWTManager'
            $router: '@router'
            $logger: '@logger'
        tags:
            - { name: kernel.event_listener, event: kernel.request }
    
    # App\EventListener\JWTRequestEventListener:
    #     arguments:
    #         $requestStack: '@request_stack'
    #         $jwtManager: '@App\Service\JWTManager'
    #         $router: '@router'
    #         $logger: '@logger'
    #     tags:
    #         - { name: 'kernel.event_listener', event: 'kernel.request' }
