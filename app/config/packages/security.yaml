security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users_in_memory: { memory: null }
        # Si vous utilisez une base de données, vous devrez ajouter un provider basé sur votre entité User
        users_in_db:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: users_in_db  # Utilisez users_in_db si vous utilisez une base de données
            json_login:
                check_path: api/login
                username_path: email # Utilise "email" au lieu de "username"
                password_path: password
                success_handler: App\Security\LoginSuccessHandler
            logout:
                path: api/logout
                target: api/login

    access_control:
        # Règles d'accès pour les différents rôles
        - { path: ^/Administrateur, roles: ROLE_ADMIN }
        - { path: ^/Superviseur, roles: ROLE_SUPERVISOR }
        - { path: ^/Etudiant, roles: ROLE_STUDENT }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Valeur la plus basse pour bcrypt
                time_cost: 3 # Valeur la plus basse pour argon
                memory_cost: 10 # Valeur la plus basse pour argon